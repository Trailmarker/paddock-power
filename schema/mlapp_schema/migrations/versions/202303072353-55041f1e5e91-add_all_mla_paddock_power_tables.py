"""Add all MLA Paddock Power tables

Revision ID: 55041f1e5e91
Revises: d322667749a3
Create Date: 2023-03-07 23:53:29.424050

"""
# -*- coding: utf-8 -*-
from alembic import op
import sqlalchemy as sa
import geoalchemy2
import mlapp_schema.data
import mlapp_schema.data.models 

from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision = '55041f1e5e91'
down_revision = 'd322667749a3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_geospatial_table('Boundary',
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='MULTIPOLYGON', srid=7845, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('Area (km²)', sa.Float(), nullable=False),
    sa.Column('Perimeter (km)', sa.Float(), nullable=False),
    sa.Column('Timeframe', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('fid')
    )
    op.create_geospatial_table('Fences',
    sa.Column('Build Order', sa.Integer(), nullable=False),
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='LINESTRING', srid=7845, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('Length (km)', sa.Float(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('fid')
    )
    op.create_geospatial_table('Land Types',
    sa.Column('Land Type Name', sa.String(), nullable=False),
    sa.Column("Best AE/km² (if Condition is 'A')", sa.Float(), nullable=False),
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='MULTIPOLYGON', srid=7845, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('Area (km²)', sa.Float(), nullable=False),
    sa.Column('Perimeter (km)', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('fid')
    )
    op.create_geospatial_table('Pipelines',
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='LINESTRING', srid=7845, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('Length (km)', sa.Float(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('fid')
    )
    op.create_geospatial_table('Waterpoints',
    sa.Column('Waterpoint Type', sa.String(), nullable=False),
    sa.Column('Near Grazing Radius (m)', sa.Float(), nullable=False),
    sa.Column('Far Grazing Radius (m)', sa.Float(), nullable=False),
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='POINT', srid=7845, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('Elevation (m)', sa.Float(), nullable=False),
    sa.Column('Longitude', sa.Float(), nullable=False),
    sa.Column('Latitude', sa.Float(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('fid')
    )
    op.create_geospatial_table('Base Paddocks',
    sa.Column('Build Fence', sa.Integer(), nullable=True),
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='MULTIPOLYGON', srid=7845, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('Area (km²)', sa.Float(), nullable=False),
    sa.Column('Perimeter (km)', sa.Float(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['Build Fence'], ['Fences.fid'], ),
    sa.PrimaryKeyConstraint('fid')
    )
    op.create_geospatial_table('Land Type Condition Table',
    sa.Column('Paddock', sa.Integer(), nullable=False),
    sa.Column('Land Type', sa.Integer(), nullable=False),
    sa.Column('Condition', sa.String(), nullable=False),
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='MULTIPOLYGON', srid=7845, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('Area (km²)', sa.Float(), nullable=False),
    sa.Column('Perimeter (km)', sa.Float(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['Land Type'], ['Land Types.fid'], ),
    sa.ForeignKeyConstraint(['Paddock'], ['Base Paddocks.fid'], ),
    sa.PrimaryKeyConstraint('fid')
    )
    op.create_geospatial_table('Paddock Land Types',
    sa.Column('Paddock', sa.Integer(), nullable=False),
    sa.Column('Land Type', sa.Integer(), nullable=False),
    sa.Column('Paddock Name', sa.String(), nullable=False),
    sa.Column('Land Type Name', sa.String(), nullable=False),
    sa.Column('Condition', sa.String(), nullable=False),
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('Watered Area (km²)', sa.Float(), nullable=False),
    sa.Column('AE/km²', sa.Float(), nullable=False),
    sa.Column('Potential AE/km²', sa.Float(), nullable=False),
    sa.Column('AE', sa.Float(), nullable=False),
    sa.Column('Potential AE', sa.Float(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='MULTIPOLYGON', srid=7845, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('Area (km²)', sa.Float(), nullable=False),
    sa.Column('Perimeter (km)', sa.Float(), nullable=False),
    sa.Column('Timeframe', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['Land Type'], ['Land Types.fid'], ),
    sa.ForeignKeyConstraint(['Paddock'], ['Base Paddocks.fid'], ),
    sa.PrimaryKeyConstraint('fid')
    )
    op.create_geospatial_table('Paddocks',
    sa.Column('Paddock', sa.Integer(), nullable=False),
    sa.Column('Build Fence', sa.Integer(), nullable=True),
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('Watered Area (km²)', sa.Float(), nullable=False),
    sa.Column('AE/km²', sa.Float(), nullable=False),
    sa.Column('Potential AE/km²', sa.Float(), nullable=False),
    sa.Column('AE', sa.Float(), nullable=False),
    sa.Column('Potential AE', sa.Float(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='MULTIPOLYGON', srid=7845, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('Area (km²)', sa.Float(), nullable=False),
    sa.Column('Perimeter (km)', sa.Float(), nullable=False),
    sa.Column('Timeframe', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['Build Fence'], ['Fences.fid'], ),
    sa.ForeignKeyConstraint(['Paddock'], ['Base Paddocks.fid'], ),
    sa.PrimaryKeyConstraint('fid')
    )
    op.create_geospatial_table('Watered Areas',
    sa.Column('Paddock', sa.Integer(), nullable=False),
    sa.Column('Watered', sa.String(), nullable=False),
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='MULTIPOLYGON', srid=7845, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('Area (km²)', sa.Float(), nullable=False),
    sa.Column('Perimeter (km)', sa.Float(), nullable=False),
    sa.Column('Timeframe', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['Paddock'], ['Base Paddocks.fid'], ),
    sa.PrimaryKeyConstraint('fid')
    )
    op.create_geospatial_table('Waterpoint Buffers',
    sa.Column('Waterpoint', sa.Integer(), nullable=False),
    sa.Column('Paddock', sa.Integer(), nullable=False),
    sa.Column('Grazing Radius Type', sa.String(), nullable=False),
    sa.Column('Grazing Radius (m)', sa.Float(), nullable=False),
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('geometry', Geometry(geometry_type='MULTIPOLYGON', srid=7845, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('Area (km²)', sa.Float(), nullable=False),
    sa.Column('Perimeter (km)', sa.Float(), nullable=False),
    sa.Column('Status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['Paddock'], ['Base Paddocks.fid'], ),
    sa.ForeignKeyConstraint(['Waterpoint'], ['Waterpoints.fid'], ),
    sa.PrimaryKeyConstraint('fid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_geospatial_table('Waterpoint Buffers')
    op.drop_geospatial_table('Watered Areas')
    op.drop_geospatial_table('Paddocks')
    op.drop_geospatial_table('Paddock Land Types')
    op.drop_geospatial_table('Land Type Condition Table')
    op.drop_geospatial_table('Base Paddocks')
    op.drop_geospatial_table('Waterpoints')
    op.drop_geospatial_table('Pipelines')
    op.drop_geospatial_table('Land Types')
    op.drop_geospatial_table('Fences')
    op.drop_geospatial_table('Boundary')
    # ### end Alembic commands ###
